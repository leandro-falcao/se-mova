{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/le/Desktop/mova-se/src/components/CountDown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/CountDown.module.css';\nlet countDownTimeout;\nexport function CountDown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(0.05 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: hasFinished,\n    1: setHasFinished\n  } = useState(false); // tempo do relogio contados dado em minutos X segundos\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountDown() {\n    setIsActive(true);\n  } // resetar para os 25 novamente!\n\n\n  function resetCountDown() {\n    clearTimeout(countDownTimeout);\n    setIsActive(false);\n    setTime(0.05 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive === true && time > 0) {\n      countDownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countDownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"TERMINOUo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this) : null, isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `${styles.countDownButton} ${styles.countDownButtonActive}`,\n      onClick: resetCountDown,\n      children: \"Reset Contador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countDownButton,\n      onClick: startCountDown,\n      children: \"Start Contador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/home/le/Desktop/mova-se/src/components/CountDown.tsx"],"names":["useState","useEffect","styles","countDownTimeout","CountDown","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountDown","resetCountDown","clearTimeout","setTimeout","countDownContainer","countDownButton","countDownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport styles from '../styles/components/CountDown.module.css';\n\nlet countDownTimeout: NodeJS.Timeout; \n\nexport function CountDown(){\n\n   const [time, setTime] = useState(0.05 * 60);\n   const [isActive, setIsActive] = useState(false);\n   const [hasFinished, setHasFinished ] = useState(false);\n\n   // tempo do relogio contados dado em minutos X segundos\n   const minutes = Math.floor(time / 60); \n   const seconds = time % 60;\n\n   const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split(''); \n   \n   const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split(''); \n\n   function startCountDown(){\n      setIsActive(true);\n   }\n   \n   // resetar para os 25 novamente!\n   function resetCountDown(){\n      clearTimeout(countDownTimeout);\n      setIsActive(false)\n      setTime(0.05 * 60)\n}\n\n   useEffect( ()=>{\n      if( isActive === true && time > 0){\n         countDownTimeout = setTimeout(() => {\n               setTime( time - 1 )     \n            }, 1000); \n      } else if(isActive && time === 0){\n         setHasFinished(true)\n         setIsActive(false);         \n      }\n   }, [isActive, time])\n   \n   return(\n      <div>\n\n         <div className={styles.countDownContainer}>\n            <div>\n               <span>{minuteLeft}</span>\n               <span>{minuteRight}</span>\n            </div>\n\n            <span>:</span>\n            \n            <div>\n               <span>{secondLeft}</span>\n               <span>{secondRight}</span>\n            </div>\n            \n         </div>\n\n         { hasFinished ? (\n            <p>TERMINOUo</p>\n         ) : null\n            }\n\n\n         {isActive ? \n            (\n                <button type=\"button\" \n                  className={`${styles.countDownButton} ${styles.countDownButtonActive}`} \n                  onClick={resetCountDown}>\n                  Reset Contador\n               </button>                  \n            ) \n            : \n            (\n               <button type=\"button\" \n                  className={styles.countDownButton} \n                  onClick={startCountDown}>\n                  Start Contador\n               </button>   \n            )    \n         }\n      </div>\n   );\n}"]},"metadata":{},"sourceType":"module"}