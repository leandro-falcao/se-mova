{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/le/Desktop/mova-se/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      levelUp: levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"ncs16728k9gXVLb/fXETIQyuku4=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/le/Desktop/mova-se/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","levelUp"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAEA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASG,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC9CH,QAAQ,CAAC,CAAD,CADsC;AAAA,MACjEI,KADiE;AAAA,MAC1DC,QAD0D;;AAAA,mBAEtBL,QAAQ,CAAC,CAAD,CAFc;AAAA,MAEjEM,iBAFiE;AAAA,MAE9CC,oBAF8C;;AAIxE,WAASC,OAAT,GAAmB;AACjBH,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAED;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAALA,KAAD;AAAQI,MAAAA,OAAO,EAAPA;AAAR,KAAnC;AAAA,cACGL;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAdeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, useState, ReactNode } from \"react\";\n\nexport const ChallengesContext = createContext({});\n\ninterface ChallengesProvidesProps{\n  children: ReactNode;\n}\n\nexport function ChallengesProvider({ children }: ChallengesProvidesProps) {\n  const [level, setLevel] = useState(1);\n  const [currentExperience, setCurrentExperience] = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n\n  }\n\n  return (\n    <ChallengesContext.Provider value={{level, levelUp}}>\n      {children}\n    </ChallengesContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}