{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/le/Desktop/mova-se/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/le/Desktop/mova-se/src/components/CountDown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport styles from '../styles/components/CountDown.module.css';\nvar countDownTimeout;\nexport function CountDown() {\n  _s();\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1]; // tempo do relogio contados dado em minutos X segundos\n\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountDown() {\n    setIsActive(true);\n  } // resetar para os 25 novamente!\n\n\n  function resetCountDown() {\n    clearTimeout(countDownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive === true && time > 0) {\n      countDownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countDownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      type: \"button\",\n      className: styles.countDownButton,\n      onClick: resetCountDown,\n      children: \"Ciclo Encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.countDownButton, \" \").concat(styles.countDownButtonActive),\n        onClick: resetCountDown,\n        children: \"Reset Ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countDownButton,\n        onClick: startCountDown,\n        children: \"Start Cico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CountDown, \"cVu0hsDf1rnm10+qbfS96WIdEJo=\");\n\n_c = CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["/home/le/Desktop/mova-se/src/components/CountDown.tsx"],"names":["useState","useEffect","useContext","styles","countDownTimeout","CountDown","ChallengesContext","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountDown","resetCountDown","clearTimeout","setTimeout","countDownContainer","countDownButton","countDownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\n\nimport styles from '../styles/components/CountDown.module.css';\n\nlet countDownTimeout: NodeJS.Timeout;\n\nexport function CountDown() {\n\n   const { startNewChallenge } = useContext(ChallengesContext);\n\n   const [time, setTime] = useState(0.1 * 60);\n   const [isActive, setIsActive] = useState(false);\n   const [hasFinished, setHasFinished] = useState(false);\n\n   // tempo do relogio contados dado em minutos X segundos\n   const minutes = Math.floor(time / 60);\n   const seconds = time % 60;\n\n   const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n\n   const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n   function startCountDown() {\n      setIsActive(true);\n   }\n\n   // resetar para os 25 novamente!\n   function resetCountDown() {\n      clearTimeout(countDownTimeout);\n      setIsActive(false)\n      setTime(0.1 * 60)\n   }\n\n   useEffect(() => {\n      if (isActive === true && time > 0) {\n         countDownTimeout = setTimeout(() => {\n            setTime(time - 1)\n         }, 1000);\n      }\n      else if (isActive && time === 0) {\n         setHasFinished(true)\n         setIsActive(false);\n      }\n   }, [isActive, time])\n\n\n   return (\n      <div>\n\n         <div className={styles.countDownContainer}>\n            <div>\n               <span>{minuteLeft}</span>\n               <span>{minuteRight}</span>\n            </div>\n\n            <span>:</span>\n\n            <div>\n               <span>{secondLeft}</span>\n               <span>{secondRight}</span>\n            </div>\n\n         </div>\n\n         { hasFinished ?\n            (\n               <button\n                  disabled\n                  type=\"button\"\n                  className={styles.countDownButton}\n                  onClick={resetCountDown}>\n                  Ciclo Encerrado\n               </button>\n            ) : (\n               <>\n                  {isActive ? (\n                     <button type=\"button\"\n                        className={`${styles.countDownButton} ${styles.countDownButtonActive}`}\n\n                        onClick={resetCountDown}>\n                        Reset Ciclo\n                     </button>\n                  )\n\n                     :\n\n                     (\n                        <button type=\"button\"\n                           className={styles.countDownButton}\n                           onClick={startCountDown}>\n                           Start Cico\n                        </button>\n                     )\n                  }\n               </>\n            )}\n\n      </div>\n   )\n}"]},"metadata":{},"sourceType":"module"}